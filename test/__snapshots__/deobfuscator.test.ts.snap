// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`deobfuscate obfuscator.io.js 1`] = `
"// v4.0.0

function hi() {
  console.log(\\"Hello World!\\");
  console.log( /*webcrack:decode_error*/undefined);
  console.log( /*webcrack:decode_error*/undefined);
  const p = true;
  console.log(p ? \\"log\\" : \\"Hello World!\\");
}
hi();"
`;

exports[`deobfuscate obfuscator.io-calls-transform.js 1`] = `
"function foo() {
  var c = \\"string1\\";
  var d = \\"string2\\";
  var e = \\"string3\\";
  var f = \\"string4\\";
  var g = \\"string5\\";
  var h = \\"string6\\";
}
console.log(foo());"
`;

exports[`deobfuscate obfuscator.io-control-flow.js 1`] = `
"function applyTransforms() {
  this.modules.forEach(varInjection_1.inlineVarInjections);
  this.modules.forEach(esm_1.convertESM);
  (0, getDefaultExport_1.convertDefaultRequire)(this);
  this.replaceRequireCalls();
  var f = m.capture(m.numericLiteral());
  var g = m.callExpression(m.identifier(\\"require\\"), [f]);
  return g;
}"
`;

exports[`deobfuscate obfuscator.io-control-flow-keys.js 1`] = `
"function hi() {
  const _0x46643e = 1;
  const _0x4d295f = 2;
  if (_0x46643e < _0x4d295f) {
    console.log(\\"Hello World!\\");
  }
}
hi();"
`;

exports[`deobfuscate obfuscator.io-function-wrapper.js 1`] = `
"function hi() {
  console.log(\\"Hello World!\\");
  console.log(30);
  console.log(undefined);
}
hi();"
`;

exports[`deobfuscate obfuscator.io-high.js 1`] = `
"function hi() {
  console.log(\\"Hello World!\\");
}
hi();"
`;

exports[`deobfuscate obfuscator.io-multi-encoders.js 1`] = `
"function hi() {
  console.log(\\"Hello World!\\");
}
hi();"
`;

exports[`deobfuscate obfuscator.io-rotator-unary.js 1`] = `
"function hi() {
  console.log(\\"Hello World!\\");
}
hi();"
`;

exports[`inline decoder > inline function 1`] = `
"function decoder() {}
decoder(1);
(() => {
  decoder(2 - 625, 3);
  (() => {
    decoder(5 - -678 - 625, 4);
  })();
})();"
`;

exports[`inline decoder > inline variable 1`] = `
"function decoder() {}
decoder(1);
() => {
  decoder(2);
  decoder(3);
  () => {
    alias(4);
  };
  decoder(5);
};"
`;
